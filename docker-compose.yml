services:

  nginx: 
    build: 
      context: .
      dockerfile: "Dockerfile.nginx"
    container_name: hotel_app_nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - hotel_app
      - flower
    

  db:
    image: postgres:15
    container_name: hotel_app_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432
  redis:
    image: redis:7
    container_name: hotel_app_redis
    env_file:
      - .env-non-dev
  

  hotel_app:
    build:
      context: .
    container_name: hotel_app
    env_file: 
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["docker/app.sh"]
    # ports: 
    #   - 7777:8000
    volumes:
      - ./app:/hotel_app/app  # ← Синхронизация кода для разработки
  
  celery: 
    build:
      context: . 
    container_name: hotel_app_celery
    depends_on: 
      - redis
      - hotel_app 
    command: ["docker/celery.sh"]
    env_file: 
      - .env-non-dev
  
  flower: 
    build: 
      context: . 
    container_name: hotel_app_flower
    depends_on: 
      - redis
      - hotel_app
    command: ["docker/flower.sh"]
    env_file: 
      - .env-non-dev
    ports:
      - 5555:5555  # ← Добавляем порт для Flower

  # prometheus: 
  #   image: prom/prometheus:v2.43.0
  #   container_name: hotel_app_prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090
  # grafana: 
  #   image: grafana/grafana:9.4.7
  #   container_name: hotel_app_grafana
  #   volumes:
  #     - grafanadata:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000

volumes:
  postgresdata:
  # prometheusdata:
  # grafanadata:
